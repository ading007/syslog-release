---
groups:
- name: syslog-release
  jobs:
  - bump-go-package
  - syslog-acceptance-tests
  - create-final-release-patch
  - create-final-release-minor
- name: infrastructure
  jobs:
  - setup-infrastructure
  - destroy-infrastructure

resource_types:
- name: vault
  type: docker-image
  source:
    repository: oratos/vault-resource
    tag: latest

resources:
# Manifests, Releases, and Stemcells

# ENV
- name: leela-bbl-state
  type: vault
  source:
    url: https://vault.oratos.ci.cf-app.com
    role_id: ((vault.role_id))
    secret_id: ((vault.secret_id))
    path: secret/envs/leela-bbl-state
    tarball: true
- name: syslog-release
  type: git
  source:
    branch: develop
    private_key: ((github.oratos-bot-private-key))
    uri: git@github.com:cloudfoundry/syslog-release.git
    ignore_paths:
    - .final_builds/*
    - releases/*
- name: syslog-release-master
  type: git
  source:
    branch: master
    private_key: ((github.oratos-bot-private-key))
    uri: git@github.com:cloudfoundry/syslog-release.git
# We have a second (explicitly develop) copy of this resource
# to avoid creating new (triggering) versions
# when putting master to develop.
- name: syslog-release-develop
  type: git
  source:
    branch: develop
    private_key: ((github.oratos-bot-private-key))
    uri: git@github.com:cloudfoundry/syslog-release.git
- name: golang-release
  type: git
  source:
    branch: master
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: '*'
- name: ubuntu-xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent
- name: ubuntu-trusty-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent
#   Only necessary to run syslog acceptance tests with CentOS,
#   but such tests don't currently work,
#   due to rsyslogd not being on the path in the centos stemcell.
# - name: centos-stemcell
#   type: bosh-io-stemcell
#   source:
#     name: bosh-google-kvm-centos-7-go_agent

# Control and Versions
- name: syslog-release-version
  type: semver
  source:
    initial_version: "11.3.0"
    driver: git
    uri: git@github.com:cloudfoundry/syslog-release
    branch: syslog-release-version
    file: version
    private_key: ((github.oratos-bot-private-key))

# Concourse Tasks
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v9.5.0
- name: syslog-ci
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/syslog-release.git

jobs:
- name: setup-infrastructure
  serial_groups: [leela]
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: leela-bbl-state
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcloud.oratos-ci-testing-cfcr-service-account))
      BBL_GCP_REGION: us-central1
      BBL_ENV_NAME: leela
      SKIP_LB_CREATION: true
      STORE_BBL_STATE_AS_TARBALL: true
    input_mapping:
      bbl-state: leela-bbl-state
      bbl-config: leela-bbl-state
  - task: clean-up-bbl-state
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: oratos/ci-base
      inputs:
      - name: updated-bbl-state
      outputs:
      - name: cleaned-bbl-state
      params:
        DEBUG:
      run:
        path: /bin/bash
        args:
        - "-c"
        - |
          #!/bin/bash
          set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

          tar xvzf updated-bbl-state/bbl-state.tgz -C updated-bbl-state/
          rm updated-bbl-state/bbl-state.tgz

          pushd updated-bbl-state/bbl-state > /dev/null
            # Delete all files ignored by git.
            git init
            git clean -ffdX
          popd > /dev/null

          cp -r updated-bbl-state/. cleaned-bbl-state
  - put: leela-bbl-state
    params:
      data: updated-bbl-state


- name: destroy-infrastructure
  serial_groups: [leela]
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: leela-bbl-state
    - get: cf-deployment-concourse-tasks
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: leela-bbl-state
      bbl-config: leela-bbl-state
    params:
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcloud.oratos-ci-testing-cfcr-service-account))
    ensure:
      put: leela-bbl-state
      params:
        repository: updated-bbl-state
        rebase: true
- name: bump-go-package
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: golang-release
      trigger: true
    - get: syslog-ci
    - get: syslog-release
  - task: bump-go-package
    file: syslog-ci/.concourse/tasks/bump-release-package/task.yml
    input_mapping:
      release: syslog-release
      package-release: golang-release
    params:
      PRIVATE_YML: ((syslog-release.private_yml))
      PACKAGE_NAME: golang-1-linux
  - put: syslog-release-develop
    params:
      repository: updated-release

- name: syslog-acceptance-tests
  public: true
  serial: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: syslog-release
      trigger: true
    - get: leela-bbl-state
    - get: ubuntu-trusty-stemcell
    - get: ubuntu-xenial-stemcell
    # - get: centos-stemcell
  - task: upload-all-linux-stemcells
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v5
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash

            set -e

            workspace=$PWD
            mkdir -p $GOPATH/src/github.com/cloudfoundry
            ln -s $workspace/syslog-release $GOPATH/src/github.com/cloudfoundry/syslog-release

            function kill_bbl_ssh {
              pkill ssh || true
            }

            trap kill_bbl_ssh EXIT

            pushd $workspace/leela-bbl-state
              tar -xzf bbl-state.tgz
              eval "$(bbl print-env --state-dir=bbl-state)"
            popd

            bosh upload-stemcell ubuntu-trusty-stemcell/*.tgz
            bosh upload-stemcell ubuntu-xenial-stemcell/*.tgz
      inputs:
      - name: leela-bbl-state
      - name: ubuntu-trusty-stemcell
      - name: ubuntu-xenial-stemcell
  - task: syslog-acceptance-xenial
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v5
      params:
        STEMCELL_OS: ubuntu-xenial
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash

            set -e

            workspace=$PWD

            function kill_bbl_ssh {
              pkill ssh || true
            }

            trap kill_bbl_ssh EXIT

            pushd $workspace/leela-bbl-state
              tar -xzf bbl-state.tgz
              eval "$(bbl print-env --state-dir=bbl-state)"
            popd

            pushd syslog-release
              go mod download
              ./scripts/test
            popd
      caches:
      - path: syslog-release/blobs
      inputs:
      - name: syslog-release
      - name: leela-bbl-state
  - task: syslog-acceptance-trusty
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: v5
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash

            set -e

            workspace=$PWD

            function kill_bbl_ssh {
              pkill ssh || true
            }

            trap kill_bbl_ssh EXIT

            pushd $workspace/leela-bbl-state
              tar -xzf bbl-state.tgz
              eval "$(bbl print-env --state-dir=bbl-state)"
            popd

            pushd syslog-release
              go mod download
              ./scripts/test
            popd
      caches:
      - path: syslog-release/blobs
      inputs:
      - name: syslog-release
      - name: leela-bbl-state

- name: create-final-release-patch
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: syslog-ci
    - get: syslog-release
      passed: [syslog-acceptance-tests]
    - get: syslog-release-master
    - get: syslog-release-version
      params: {bump: patch}
  - task: create-final-release
    file: syslog-ci/.concourse/tasks/create-final-release/task.yml
    input_mapping:
      release-repo: syslog-release
      release-version: syslog-release-version
    params:
      PRIVATE_YML: ((syslog-release.private_yml))
  - put: syslog-release-master
    params:
      rebase: true
      repository: final-release-repo
      tag: syslog-release-version/version
      tag_prefix: v
  - put: syslog-release-develop
    params:
      repository: syslog-release-master
      merge: true
  - put: syslog-release-version
    params: {file: syslog-release-version/version}
- name: create-final-release-minor
  public: true
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: syslog-ci
    - get: syslog-release
      passed: [syslog-acceptance-tests]
    - get: syslog-release-master
    - get: syslog-release-version
      params: {bump: minor}
  - task: create-final-release
    file: syslog-ci/.concourse/tasks/create-final-release/task.yml
    input_mapping:
      release-repo: syslog-release
      release-version: syslog-release-version
    params:
      PRIVATE_YML: ((syslog-release.private_yml))
  - put: syslog-release-master
    params:
      rebase: true
      repository: final-release-repo
      tag: syslog-release-version/version
      tag_prefix: v
  - put: syslog-release-develop
    params:
      repository: syslog-release-master
      merge: true
  - put: syslog-release-version
    params: {file: syslog-release-version/version}
